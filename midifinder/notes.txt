CREATE TABLE url (
  id int(11) NOT NULL auto_increment,
  source_id int(11) default NULL,
  depth int(11) default '1',
  scheme varchar(255) NOT NULL,
  host varchar(48) NOT NULL,
  port int(10) default NULL,
  path varchar(200) NOT NULL,
  query varchar(4096) default NULL,
  anchor_text varchar(4096) default NULL,
  mime_type varchar(56) default NULL,
  data_size int(20) default '0',
  status_code int(3) default NULL,
  create_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  locked_date datetime default NULL,
  last_request_date datetime default NULL,
  status varchar(20) NOT NULL default 'NEW',
  PRIMARY KEY  (id),
  #UNIQUE KEY unique_url (host,path,query),
  KEY host_path (host,path),
  KEY unlocked_status_mime_type (status,mime_type,locked_date,status_code),
  KEY unlocked_status (locked_date,status_code)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=ascii;

================================================================================================

mvn clean assembly:assembly -DskipTests=true
mvn clean jar:jar -DskipTests=true

GRANT ALL ON midifinder.* TO midifinder@'%' IDENTIFIED BY 'midifinder'; FLUSH PRIVILEGES;

INSERT INTO url SET create_date=NOW(), status='NEW', depth=0, scheme='http', host='tubular.net', path='/midi/';

mime_type='audio/midi'

SELECT id , source_id , depth , host  , port , SUBSTR(path,1,30) , mime_type, data_size , status_code, status  
FROM url 
WHERE mime_type='audio/midi';

 SELECT id , source_id , depth , host  , port , SUBSTR(path,1,30) , mime_type, data_size , status_code, status   
 FROM url  
 WHERE mime_type='audio/midi' order by host, query asc;
 
  SELECT id , source_id , depth , host  , port , SUBSTR(path,1,30) , mime_type, data_size , status_code, status   
 FROM url  
 WHERE host like '%classical%' order by host, query asc;

 SELECT host, COUNT(*) from url where mime_type='audio/midi'  GROUP BY host;
 
 
 INSERT INTO url SET create_date=NOW(), status='NEW', depth=0, scheme='http', host='midi.dubroom.org', path='/';
 

DROP PROCEDURE IF EXISTS create_url;
DELIMITER $$
CREATE PROCEDURE create_url (IN url_host VARCHAR(255), IN url_path VARCHAR(255))
BEGIN                                                                     
  INSERT INTO url SET create_date=NOW(), status='NEW', depth=0, scheme='http',  host=url_host, path=url_path, mime_type='text/html', status_code=200;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS num_by_host;
DELIMITER $$
CREATE  PROCEDURE num_by_host ()                   
BEGIN                                                                     
  SELECT host, count(*) AS num FROM url where path like '%.mid' GROUP by host ORDER BY num; 
END$$
DELIMITER ;


 SELECT count(*) AS num FROM url where path like '%.mid'; 


 SELECT status, COUNT(*) from url  GROUP BY status;
 
 
SELECT id , source_id , depth , host  , port , SUBSTR(path,1,40) ,  SUBSTR(query,1,40) 
FROM url  
WHERE path like '%.mid' order by host, query asc;
 
 		
		/*
		 *  Thread to fetch headers from web pages
		Thread fetchHeadersThread = new Thread( 
			new Runnable() {
				public void run() {
					while (running) {
						Url url = null;
						
						try {
							log.debug("Attempting to take URL from queue - current queue size: " + fetchHeaderUrls.size());
							url = fetchHeaderUrls.take();
							log.debug("Got URL from queue, submitting to be processed: '" + url + "'");
							retrieveHeadersService.submit( new UrlHeadersTask(url) );
						} catch (InterruptedException e) {
							// TODO throw this upwards
							// never mind for now
						}
					}
				}
			},
			"Headers fetch thread"
		);
		fetchHeadersThread.start();
		*/
		
		/*
		 *  Thread to fetch headers from web pages
		Thread fetchChildrenThread = new Thread( 
			new Runnable() {
				public void run() {
					while (running) {
						Url url = null;
						
						try {
							log.debug("Attempting to take URL from queue to retrieve - current queue size: " + processHtmlUrls.size());
							url = processHtmlUrls.take();
							log.debug("Got URL to retrieve from queue, submitting to be processed: '" + url + "'");
							retrieveChildrenService.submit( new UrlChildrenTask(url) );
						} catch (InterruptedException e) {
							// TODO throw this upwards
							// never mind for now
						}
					}
				}
			},
			"Children fetch thread"
		);
		fetchChildrenThread.start();
		 */
		
CALL create_url('www.psci.net', '/kellyk/midi.htm');
		






CALL create_url('www.potsw.org', '/Music/TimRoche/');
CALL create_url('www.harmony-central.com', '/MIDI/files.html');

# - - - - - - - - - - - - - - - - - - - - - - - - 

CALL create_url('www.lionking.org', '/~br/sounds/midi/');
CALL create_url('gamma.nic.fi', '/~rikuh/main/music/');
CALL create_url('people.freebsd.org', '/~nik/80days/');
CALL create_url('www.artmaker.com', '/Midis/');
CALL create_url('www.zaxpax.com', '/midis/');
CALL create_url('www.nineveh.com', '/midi/');
CALL create_url('www.davidyounker.com', '/midi/');
CALL create_url('www.poetryhere.com', '/midi/');
CALL create_url('www.worldcomposition.com', '/piano/Midi/');
CALL create_url('www.michiganbands.com', '/michigan-music/index-of-mp3.html');
CALL create_url('ftp.sunet.se', '/pub/music/midi/mirror.filecity/christian_music/');
CALL create_url('home.the-wire.com', '/~pamc/');
CALL create_url('www.mboss.force9.co.uk', '/gm-ccfx/');
CALL create_url('www.cs.ucla.edu', '/~phantom/sounds/');
CALL create_url('playmaster101.com', '/AUDIO/MIDI/DRUMS/');
CALL create_url('www.minor9.com', '/midi/');
CALL create_url('www.mauro.com.br', '/rock/mids/deszipados/');
CALL create_url('www.dactar.ch', '/mious-data/midi/ULTIMA/ULTIMA_VII/Black_Gate/');
CALL create_url('sep800.mine.nu', '/files/ringtones/O-Tones/');
CALL create_url('battle.netgate.net', '/');
CALL create_url('sprott.physics.wisc.edu', '/midi/');
CALL create_url('www.ajsmidi.com', '/poprock/midi/');
CALL create_url('www.poetryhere.com', '/midi/');
CALL create_url('www.tski.co.jp', '/baldio/midi/');
CALL create_url('goran.tangring.com', '/midis/');
CALL create_url('www.swissdom.cc', '/midis/karaoke-internacional-1/a/');
CALL create_url('www.westnet.com', '/Halloween/midi/');
CALL create_url('mmacdonald.com', '/midi/?path=XG/');
CALL create_url('tgv777.free.fr', '/Midi%20filesEtKar/Midis_Divers/Midi%20Songs%20(20000)/Medley\'s%20Diversen/Latin%20Medley\'s/');
CALL create_url('www.erikaweb.com', '/midi/files/dance/?');
CALL create_url('www.dosguys.com', '/JCS/MIDI');
CALL create_url('bob.bmcadvies.com', '/Midi/?');
CALL create_url('gerryradim.sweb.cz', '/mid.htm');
CALL create_url('andrelouis.com', '/midi/classical/');
CALL create_url('www.ossh.com', '/midi/sound/classic');
CALL create_url('artscene.textfiles.com', '/music/midi/p/');

# - - - - - - - - - - - - - - - - - - - - - - - - 

SELECT count(*) AS num 
FROM url 
WHERE mime_type='text/html'
  AND locked_date IS NULL
  AND status_code=200
  AND status='HEADERS_RETRIEVED'
  AND host in
( 
   SELECT DISTINCT(host) FROM url where path like '%.mid' 
);

SELECT *
FROM url 
WHERE mime_type='text/html'
  AND locked_date IS NULL
  AND status_code=200
  AND status='HEADERS_RETRIEVED'
  AND host in
  ( 
    SELECT host FROM(
      SELECT host, COUNT(*) AS num
      FROM url 
      WHERE path like '%.mid'
      GROUP BY host
      HAVING num > 20
    )
  );
LIMIT 20

